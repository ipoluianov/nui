package nui

var linuxKeyToNuiKey = map[int]Key{
	0x09: KeyEsc,
	0x0A: Key1,
	0x0B: Key2,
	0x0C: Key3,
	0x0D: Key4,
	0x0E: Key5,
	0x0F: Key6,
	0x10: Key7,
	0x11: Key8,
	0x12: Key9,
	0x13: Key0,
	0x14: KeyMinus,
	0x15: KeyEqual,
	0x16: KeyBackspace,
	0x17: KeyTab,
	0x18: KeyQ,
	0x19: KeyW,
	0x1A: KeyE,
	0x1B: KeyR,
	0x1C: KeyT,
	0x1D: KeyY,
	0x1E: KeyU,
	0x1F: KeyI,
	0x20: KeyO,
	0x21: KeyP,
	0x22: KeyLeftBracket,
	0x23: KeyRightBracket,
	0x24: KeyEnter,
	0x25: KeyCtrl,
	0x26: KeyA,
	0x27: KeyS,
	0x28: KeyD,
	0x29: KeyF,
	0x2A: KeyG,
	0x2B: KeyH,
	0x2C: KeyJ,
	0x2D: KeyK,
	0x2E: KeyL,
	0x2F: KeySemicolon,
	0x30: KeyApostrophe,
	0x31: KeyGrave,
	0x32: KeyShift,
	0x33: KeyBackslash,
	0x34: KeyZ,
	0x35: KeyX,
	0x36: KeyC,
	0x37: KeyV,
	0x38: KeyB,
	0x39: KeyN,
	0x3A: KeyM,
	0x3B: KeyComma,
	0x3C: KeyDot,
	0x3D: KeySlash,
	0x3E: KeyShift,
	0x3F: KeyNumpadAsterisk,
	0x40: KeyAlt,
	0x41: KeySpace,
	0x42: KeyCapsLock,
	0x43: KeyF1,
	0x44: KeyF2,
	0x45: KeyF3,
	0x46: KeyF4,
	0x47: KeyF5,
	0x48: KeyF6,
	0x49: KeyF7,
	0x4A: KeyF8,
	0x4B: KeyF9,
	0x4C: KeyF10,
	0x4D: KeyNumLock,
	0x4E: KeyScrollLock,
	0x4F: KeyNumpad7,
	0x50: KeyNumpad8,
	0x51: KeyNumpad9,
	0x52: KeyNumpadMinus,
	0x53: KeyNumpad4,
	0x54: KeyNumpad5,
	0x55: KeyNumpad6,
	0x56: KeyNumpadPlus,
	0x57: KeyNumpad1,
	0x58: KeyNumpad2,
	0x59: KeyNumpad3,
	0x5A: KeyNumpad0,
	0x5B: KeyNumpadDot,
	0x5F: KeyF11,
	0x60: KeyF12,

	0x68: KeyEnter,
	0x69: KeyCtrl,
	0x6A: KeyNumpadSlash,
	0x6B: KeyPrintScreen,
	0x6C: KeyAlt,
	0x6E: KeyHome,
	0x6F: KeyArrowUp,
	0x70: KeyPageUp,
	0x71: KeyArrowLeft,
	0x72: KeyArrowRight,
	0x73: KeyEnd,
	0x74: KeyArrowDown,
	0x75: KeyPageDown,
	0x76: KeyInsert,
	0x77: KeyDelete,

	0x7F: KeyPauseBreak,

	0x85: KeyWin,

	0x87: KeyContextMenu,
}

func ConvertLinuxKeyToNuiKey(macosKey int) Key {
	if key, ok := linuxKeyToNuiKey[macosKey]; ok {
		return key
	}
	return Key(0)
}
